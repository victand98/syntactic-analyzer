package syntactic;
import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;

    public void syntax_error (Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
    }

:};

terminal VOID, OPENING_BRACKETS, CLOSING_BRACKETS, OPENING_KEYS, CLOSING_KEYS, SEMICOLON, IDENTIFIER, NUMBER, EQUAL, ADD, INTEGER, STRING, DATA_TYPE, QUOTES, MINUS, PRODUCT, DIVISION, ERROR;

non terminal START, SENTENCE, DECLARATION;

start with START;

START ::= VOID IDENTIFIER OPENING_BRACKETS CLOSING_BRACKETS OPENING_KEYS SENTENCE CLOSING_KEYS | INTEGER IDENTIFIER OPENING_BRACKETS CLOSING_BRACKETS OPENING_KEYS SENTENCE CLOSING_KEYS;

SENTENCE ::= DECLARATION | SENTENCE DECLARATION;

DECLARATION ::= INTEGER IDENTIFIER SEMICOLON | INTEGER IDENTIFIER EQUAL NUMBER SEMICOLON | STRING IDENTIFIER SEMICOLON;